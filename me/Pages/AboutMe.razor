@page "/"

@using System.Collections.ObjectModel
@using Syncfusion.Blazor.Spinner

@inject IExcelFileService ExcelFileService

<PageTitle>gjmwolmarans.me | About Me</PageTitle>

<FluentStack Orientation="Orientation.Vertical">
    <h1>Hello, world!</h1>
    <p></p>
</FluentStack>

<h2>Competency Matrix</h2>

<div style="width: 95vw; height: auto; overflow-y: hidden;">
    <iframe width="100%" height="680" frameborder="0" scrolling="no" src="https://onedrive.live.com/embed?resid=F9480B74B852B3B7%21251307&authkey=%21ALWOWl3ShAlVT70&em=2&wdAllowInteractivity=False&Item=ClusterExperience&wdDownloadButton=True&wdInConfigurator=True&wdInConfigurator=True&edesNext=false&resen=false&ed1JS=false"></iframe>
</div>

<FluentGrid>
    <FluentGridItem md="12" lg="3">
        <XPCounter TotalXP="@(Data.Tags.Any(t => t.IsHighlighted) ?
                Data.Tags.Where(t => t.IsHighlighted).Sum(t => t.WeightedExperience) :
                TotalXP)" />
        <SfSpinner @bind-Visible="@_isLoading" />
    </FluentGridItem>
    <FluentGridItem md="12" lg="9">
        <RoleList @bind-Items="@Data.Roles" />
    </FluentGridItem>
    <FluentGridItem md="12">
        <TagList @bind-Items="@Data.Tags" @bind-IsLoading="@_isLoading" />
    </FluentGridItem>
    <FluentGridItem md="12">
        <ResourceList Items="@FilteredResources" />
    </FluentGridItem>
    
</FluentGrid>

@code {
    Data Data { get; set; } = new();

    private bool _isLoading { get; set; }

    private double _totalXP = default;
    public double TotalXP
    {
        get
        {
            if (_totalXP == default)
            {
                _totalXP = Data.Tags.Sum(t => t.WeightedExperience);
            }
            return _totalXP;
        }
    }

    IEnumerable<Resource> FilteredResources =>
        Data.Tags.Any(t => t.IsHighlighted) ?
            Data.Resources.Where(r => r.ResourceTags
                .Select(r => r.Tag)
                .Any(t => t.IsHighlighted)) :
            Data.Resources;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _isLoading = true;
        Data = await ExcelFileService.LoadData();
        _isLoading = false;
    }
}
